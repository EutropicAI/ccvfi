name: CI-test

env:
  GITHUB_ACTIONS: true

on:
  push:
    branches: ["main"]
    paths-ignore:
      - "**.md"
      - "LICENSE"

  pull_request:
    branches: ["main"]
    paths-ignore:
      - "**.md"
      - "LICENSE"

  workflow_dispatch:

jobs:
  CI:
    strategy:
      matrix:
        os-version: ["ubuntu-20.04", "macos-14", "windows-latest"]
        python-version: ["3.9"]
        poetry-version: ["1.8.3"]
        pytorch-version: ["2.4.0", "2.1.2", "2.0.0", "1.13.0"]

    runs-on: ${{ matrix.os-version }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Install dependencies
        run: |
          pip install numpy==1.26.4
          pip install pydantic tenacity opencv-python einops
          pip install pre-commit scikit-image
          pip install pytest pytest-cov coverage
          pip install mypy ruff types-requests

      - name: Install PyTorch 2.4.0
        if: matrix.pytorch-version == '2.4.0'
        run: |
          pip install torch==2.4.0 torchvision==0.19.0 torchaudio==2.4.0

      - name: Install PyTorch 2.1.2
        if: matrix.pytorch-version == '2.1.2'
        run: |
          pip install torch==2.1.2 torchvision==0.16.2 torchaudio==2.1.2

      - name: Install PyTorch 2.0.0
        if: matrix.pytorch-version == '2.0.0'
        run: |
          pip install torch==2.0.0 torchvision==0.15.1 torchaudio==2.0.1

      - name: Install PyTorch 1.13.0
        if: matrix.pytorch-version == '1.13.0'
        run: |
          pip install torch==1.13.0 torchvision==0.14.0 torchaudio==0.13.0

      - name: Test
        run: |
          make lint
          make test

      - name: Codecov
        if: matrix.os-version == 'ubuntu-20.04' && matrix.pytorch-version == '2.4.0'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
